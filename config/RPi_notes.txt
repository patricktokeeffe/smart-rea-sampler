Raspberry Pi configuration notes
================================

config.txt
----------

* Default user name is "pi" and password is "raspberry" -- root account is 
  disabled so use 'sudo' or 'gksu' when necessary

The suggested `config.txt` was sourced from Adafruit, the vendor.
    https://www.adafruit.com/products/1928
    https://web.archive.org/web/20140930223220/https://www.adafruit.com/products/1928


Real-time clock (RTC) construction
----------------------------------

* Omit the resistors so the module communicates at 3.3V instead of 5V
* Fortuitously all signals are adjacent in the ribbon cable:
    * Pin 3: SDA1
    * Pin 4: 5V
    * Pin 5: SCL1
    * Pin 6: Ground
* Cut cable and split apart so pins 1 & 2 constitute one 'cable' (will be used
  for comms w/ Tri-meter), pins 3-6 are connected as another 'cable' and
  remainder of ribbon cable is left alone for now
* To faciliate easy connect/disconnect, use 4-pc PCB-mount screw terminal block
* Mount on one end of small rectangular IC-style RadioShack PCB; other end will
  be used to mount components for communicating with Trimetric


Initial setup
-------------

For initial setup, connection to internet is required to pull updates and
packages. At WSU, need wifi dongle since wired LAN implements MAC filtering.

* Default local is Great Britain, which does funny things to keyboard layout so
  change to US locale
* Enable I2C support for real-time clock comms (two-part process)

* Run `$ sudo raspi-config` 
    * Under (4) Internationalisation
        * change local from 'en_GB UTF8' to 'en_US UTF8'
        * change timezone to 'US > Pacific-New'
        * change keyboard layout from 'English (UK)' to 'Other > English (US) > English (US)'
            * leave AltGr as default for layout
            * no compose key
            * yes, enable Ctrl+Alt+Bckspc to exit X server
    * Under (8) Advanced Options
        * A6 I2C: change from 'no' to 'yes'
        * A7 Serial: change output message to serial port during boot from 'yes' to 'no'
* Follow Adafruit GPIO setup instructions to finish enabling I2C support
* Follow Adafruit Adding a RTC tutorial to finish integrating RTC w/ RPi


Communicating with TriMetric
----------------------------

* Ignore mnfctr's instructions, just use pins 3/4 on trimetric
    * Tie Trimetric and RPi ground together
* DO run signal output through 5->3.3 level converter
* No need to connect transmit from Pi (Trimetric has no Rx)


Improve usability by enabling VNC server
----------------------------------------

* Follow Adafruit lesson installing/setting up `tightvncserver`; the display
  number specified at launch (":1" argument) causes incoming connections to
  be accepted on port 5900+# (e.g. :1 -> 5901)
* Must configure wired ethernet port (eth0) to use static IP (192.168.174.252)
  so cross-over cable connection is straight-forward
    * <http://www.stuffaboutcode.com/2012/05/raspberry-pi-setting-static-ip-address.html>
    * <http://elinux.org/RPi_Setting_up_a_static_IP_in_Debian>
    * Only include address & netmask under static settings
    * DO need to reboot RPi for settings to take effect


Display mounting
----------------

Resources on the display:
    Overview: https://learn.adafruit.com/hdmi-uberguide/1928-5-display-no-touch-w-slash-mini-driver-800x480-hdmi
    Driver board: https://learn.adafruit.com/hdmi-uberguide/mini-rtd2660-hdmi-driver-board

Concerning the HDMI display buttons:
    Remote control idea: https://forums.adafruit.com/viewtopic.php?f=31&t=53407&p=269909&hilit=button+display+mount#p269909
    Glued pegs/Sugru suggestion: https://forums.adafruit.com/viewtopic.php?f=31&t=34618&p=171226&hilit=button+display+mount#p171226


RS-232 interfacing
------------------

* ~~USB-RS232 converter (Adafruit product 18, discontinued) operates at +/-10Vdc
  which makes it ideal for use with True RS-232 on Inverter's serial dongle
  but NOT okay for communicating via built-in UARTs -- get serial debug cable
  (Adafruit product 954) instead~~ Per MorningStar Connectivity Manual, the
  voltage output of serial ports on MorningStar products is below the RS-232 
  electrical specification so no need to use a special USB-serial adapter with
  SureSine's serial adapter

